// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

namespace api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("api.Models.Files", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentType")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("TEXT");

                    b.Property<int>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("EncryptFileName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileStream")
                        .HasColumnType("TEXT");

                    b.Property<int>("ServiceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ServicesId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ServicesId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("api.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActionDetail")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("IP")
                        .HasColumnType("TEXT");

                    b.Property<string>("PageAction")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("api.Models.Services", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("AmphurContact")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("TEXT");

                    b.Property<int>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DistrictContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("MooContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("PerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrefixName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProvinceContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecieveBranch")
                        .HasColumnType("TEXT");

                    b.Property<string>("RecieveDoc")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoadContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceType")
                        .HasColumnType("TEXT");

                    b.Property<string>("SoiContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCodeContact")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressHouse")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressWork")
                        .HasColumnType("TEXT");

                    b.Property<string>("AmphurContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("AmphurHouse")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuditorVf")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Bankrupt")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedIp")
                        .HasColumnType("TEXT");

                    b.Property<int>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DistrictContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("DistrictHouse")
                        .HasColumnType("TEXT");

                    b.Property<string>("DistrictWork")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Domicile")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EducateDegree")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailWork")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Imprisonment")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Insane")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Majority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ManualVf")
                        .HasColumnType("TEXT");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("MobileWork")
                        .HasColumnType("TEXT");

                    b.Property<string>("MooContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("MooHouse")
                        .HasColumnType("TEXT");

                    b.Property<string>("MooWork")
                        .HasColumnType("TEXT");

                    b.Property<string>("Occupation")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("PerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneWork")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostDelivery")
                        .HasColumnType("TEXT");

                    b.Property<string>("PrefixName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProvinceContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProvinceHouse")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProvinceWork")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Registration")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Revoke")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoadContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoadHouse")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoadWork")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("SoiContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("SoiHouse")
                        .HasColumnType("TEXT");

                    b.Property<string>("SoiWork")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedIp")
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkPlace")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCodeContact")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCodeHouse")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCodeWork")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("api.Models.Files", b =>
                {
                    b.HasOne("api.Models.Services", null)
                        .WithMany("Files")
                        .HasForeignKey("ServicesId");
                });

            modelBuilder.Entity("api.Models.Services", b =>
                {
                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
